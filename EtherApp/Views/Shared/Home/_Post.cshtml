@model Post

@inject UserManager<User> UserManager

@{
    var loggedInUser = await UserManager.GetUserAsync(User);
    var username = loggedInUser?.UserName;
    var fullName = loggedInUser?.FullName;
    var profilePicture = Url.Content("~/" + (string.IsNullOrEmpty(loggedInUser?.ProfilePictureUrl) ? "images/avatar/User.png" : loggedInUser.ProfilePictureUrl));
}

@{
    int loggedInUserId = int.TryParse(User.FindFirstValue(ClaimTypes.NameIdentifier), out int result) ? result : 0;

    TimeSpan timeSpanSincePosted = DateTime.Now.Subtract(Model.DateCreated);
    string displayTime = "";
    if (timeSpanSincePosted.TotalDays >= 1)
    {
        displayTime = $"{timeSpanSincePosted.Days}d ago";
    }
    else if (timeSpanSincePosted.TotalHours >= 1)
    {
        displayTime = $"{timeSpanSincePosted.Hours}h ago";
    }
    else if (timeSpanSincePosted.TotalMinutes >= 1)
    {
        displayTime = $"{timeSpanSincePosted.Minutes}m ago";
    }
    else
    {
        displayTime = "Just now";
    }

    bool isFavorited = Model.Favorites.Any(n => n.UserId == loggedInUserId);
    bool isLiked = Model.Like.Any(n => n.UserId == loggedInUserId);
    bool isPrivate = Model.IsPrivate == true && Model.UserId == loggedInUserId;
    bool isReported = Model.Reports.Any(n => n.UserId == loggedInUserId);

    bool showAllComments = ViewData["ShowAllComments"] as bool? ?? false;

}

<div class="bg-[#11001c] rounded-xl shadow-sm text-sm font-medium border1">
    @* Post Heading *@
    <div class="flex gap-3 sm:p-4 p-2.5 text-sm font-medium">
        <a asp-controller="User" asp-action="Details" asp-route-userId="@Model.UserId">
            <img src="@Url.Content("~/" + (string.IsNullOrEmpty(Model.User.ProfilePictureUrl) ? "images/avatar/User.png" : Model.User.ProfilePictureUrl))" class="w-9 h-9 rounded-full bg-white" />
        </a>
        <div class="flex-1">
            <a asp-controller="User" asp-action="Details" asp-route-userId="@Model.UserId">
                <h4 class="!text-white">@Model.User.FullName</h4>
                <div class="text-sm text-[#af0fbf]" title="@Model.DateCreated.ToString("MM/dd/yyyy hh:mm tt")">@displayTime</div>
            </a>
        </div>
        <div class="-mr-1">
            <button type="button" class="bg-[#11001c]/90 flex items-center justify-center rounded-full hover:bg-opacity-80 w-8 h-8">
                <ion-icon name="ellipsis-horizontal-outline" class="text-white text-xl"></ion-icon>
            </button>
            <div class="p-1 w-[185px] bg-[#3a015c] post-options-dropdown" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">

                @if (Model.UserId == loggedInUserId)
                {
                    <form class="rounded-lg hover:bg-blue-500/50" asp-controller="Home" asp-action="TogglePostVisibility">
                        <input type="hidden" name="postId" value="@Model.Id" />
                        <button type="submit" class="p-2 flex gap-1 justify-start items-center  w-full h-full">
                            <ion-icon name="@(isPrivate ? "lock-open-outline" : "lock-closed-outline")" class="text-xl !text-white shrink-0"></ion-icon>
                            <p class="!text-white"> Set as @(isPrivate ? "public" : "private")</p>
                        </button>
                    </form>
                    <hr class="m-2" />
                    <div class="rounded-lg hover:bg-red-500/50">
                        <button type="button" onclick="openPostDeleteDialog('@Model.Id')" class="p-2 flex gap-1 justify-start items-center  w-full h-full">
                            <ion-icon name="trash-bin-outline" class="text-xl !text-white shrink-0"></ion-icon>
                            <p class="!text-white"> Delete post</p>
                        </button>
                    </div>
                }
                @if (!isReported)
                {
                    <hr class="m-2" />
                    <form class="rounded-lg hover:bg-red-500/50" asp-controller="Home" asp-action="AddPostReport">
                        <input type="hidden" name="postId" value="@Model.Id" />
                        <button type="submit" class="p-2 flex gap-1 justify-start items-center  w-full h-full">
                            <ion-icon name="flag-outline" class="text-xl !text-white shrink-0"></ion-icon>
                            <p class="!text-white"> Report</p>
                        </button>
                    </form>

                }
            </div>
        </div>
    </div>
    @* Post Content *@
    <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
        <div class="sm:px-4 p-2.5 pt-0 w-full">
            <p class="font-normal !text-white">
                @Model.Content
            </p>
        </div>
    </a>

    @* Post Image *@
    @if (!string.IsNullOrEmpty(Model.ImageUrl))
    {
        <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
            <div class="relative w-full h-full px-2">
                <img src="@Url.Content("~/" + Model.ImageUrl)" class="sm:rounded-lg w-full h-full object-cover" />
            </div>
        </a>
    }

    @* Icons *@
    <div class="sm:p-4 p-2.5 flex items-center gap-4 text-xs font-semibold">

        <div class="flex items-center gap-2">
            <form asp-controller="Home" asp-action="TogglePostLike">
                <input type="hidden" name="postId" value="@Model.Id" />

                <button type="submit" class="p-1 hover:bg-opacity-80 cursor-pointer transition-all ease-in-out duration-200 flex items-center justify-center rounded-full @(Model.Like.Any(n => n.UserId == 4) ? "bg-red-500" : "") ">
                    <ion-icon class="text-lg text-white" name="@(isLiked ? "heart" : "heart-outline")"></ion-icon>
                </button>
            </form>

            <a href="#" class="text-white">@Model.Like.Count</a>
        </div>

        <div class="flex items-center gap-2">
            <a class="p-1 hover:bg-opacity-80 cursor-pointer transition-all ease-in-out duration-200 flex items-center justify-center rounded-full bg-[#3a015c]">
                <ion-icon class="text-lg text-white" name="chatbubble-ellipses-outline"></ion-icon>
            </a>
            <a href="#" class="text-white">@Model.Comment.Count</a>
        </div>

        <div class="flex items-center gap-2 ml-auto">
            <form asp-controller="Home" asp-action="TogglePostFavorite">
                <input type="hidden" name="postId" value="@Model.Id" />
                <button type="submit" class="p-1 hover:bg-opacity-80 cursor-pointer transition-all ease-in-out duration-200 flex items-center justify-center rounded-full bg-[#3a015c]">
                    <ion-icon class="text-lg text-white" name="@(isFavorited ? "bookmark" : "bookmark-outline")"></ion-icon>
                </button>
            </form>
            @if (Model.Favorites.Count > 0)
            {
                <a href="#">@Model.Favorites.Count</a>
            }


        </div>

    </div>
    @*comment section*@

    <div class="p-2.5 border-t border-gray-100 font-normal space-y-3 relative">
        @foreach (var comment in showAllComments ?
        Model.Comment.OrderByDescending(n => n.DateCreated)
        : Model.Comment.OrderByDescending(n => n.DateCreated).Take(2))
        {
            TimeSpan commentTimeSpanSincePosted = DateTime.Now.Subtract(comment.DateCreated);
            string commentDisplayTime = commentTimeSpanSincePosted switch
            {
                var t when t.TotalDays >= 1 => $"{(int)t.TotalDays}d ago",
                var t when t.TotalHours >= 1 => $"{(int)t.TotalHours}h ago",
                var t when t.TotalMinutes >= 1 => $"{(int)t.TotalMinutes}m ago",
                _ => "Just Now"
            };

            <div class="flex items-start gap-3 relative">
                <a asp-controller="User" asp-action="Details" asp-route-userId="@comment.UserId">
                    <img src="@Url.Content("~/" + (string.IsNullOrEmpty(comment.User.ProfilePictureUrl) ? "images/avatar/User.png" : comment.User.ProfilePictureUrl))" class="w-8 h-8 bg-secondery rounded-full mr-2" />
                </a>
                <div class="flex-1">
                    <div class=" flex justify-content-between">
                        <a asp-controller="User" asp-action="Details" asp-route-userId="@comment.UserId" class="text-white font-medium inline-block flex-grow">
                            @comment.User.FullName
                        </a>
                        <small class="text-[#af0fbf]">@commentDisplayTime</small>
                    </div>
                    <div class="flex items-center justify-between">
                        <p class="mt-0.5 text-[#dab1da]">
                            @comment.Content
                        </p>
                        <form asp-controller="Home" asp-action="RemovePostComment">
                            <input type="hidden" name="commentId" value="@comment.Id" />
                            <button type="submit" class="text-red-500 text-xs ml-2" title="Remove post comment">
                                <ion-icon name="trash-outline"></ion-icon>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
        @if (Model.Comment.Count >= 3 && !showAllComments)
        {
            <div class="p-1.5">
                <a asp-controller="Home" asp-action="PostDetails" asp-route-postId="@Model.Id">
                    Show all comments
                </a>
            </div>
        }
    </div>


    <div class="sm:p-4 p-2.5 flex items-center border-t border-gray-100 gap-1">
        <form asp-controller="Home" asp-action="AddPostComment" class="w-full flex items-center gap-2">
            <a asp-controller="User" asp-action="Details" asp-route-userId="@loggedInUser.Id">
                <img src="@(profilePicture)" class="w-8 h-8 rounded-full mr-2 bg-white" />
            </a>

            <input type="hidden" name="postId" value="@Model.Id" />
            <div class="flex-1 relative overflow-hidden h-10">
                <textarea name="content" placeholder="Add comment...." rows="1"
                          class="!text-white w-full resize-none border-transparent rounded-full !bg-transparent px-4 py-2 focus:!border-1 focus:!border-white focus:ring-transparent"></textarea>
            </div>
            <button type="submit" class="text-sm rounded-full py-1.5 px-3.5 bg-[#3a015c] hover:bg-opacity-80 transition-all ease-in-out duration-200 text-white">Comment</button>
        </form>
    </div>
</div>


