@model User;

<main id="site__main" class="2xl:ml-[--w-side] xl:ml-[--w-side-sm] p-2.5 h-100vh mt-[--m-top] bg-[#11001c]">
    <div class="max-w-3xl mx-auto">
        <div class="box relative rounded-lg shadow-md bg-[#11001c]">

            @* profile picture section *@
            <div class="flex items-center justify-between p-6 pb-4">
                <form asp-controller="Settings" asp-action="UpdateProfilePicture" enctype="multipart/form-data" id="updateProfilePictureForm" class="flex items-center gap-4 w-full">
                    <div class="relative w-12 h-12 shrink-0 bg-[#11001c]">
                        <label for="imageUpload" class="cursor-pointer">
                            <img id="imagePreview" src="@(Url.Content("~/" + (string.IsNullOrEmpty(Model.ProfilePictureUrl) ? "images/avatar/User.png" : Model.ProfilePictureUrl)))" class="object-cover w-full h-full rounded-full" alt="Profile Picture Placeholder" />
                            <input type="file" id="imageUpload" name="ProfilePicture" class="hidden" accept="image/png, image/jpeg" />
                        </label>
                        <label for="imageUpload" class="p-0.5 rounded-full border-white absolute -bottom-2 -right-2 cursor-pointer">
                            <ion-icon name="image" class="!text-white"></ion-icon>
                        </label>
                    </div>
                    <div>
                        <h3 class="!text-white font-semibold">@Model.FullName</h3>
                        <p class="text-sm text-blue-600 mt-1 font-normal">@Model.UserName</p>
                    </div>
                    <button type="submit" id="saveButton" class="hidden button bg-blue-500 text-white px-4 py-1 rounded ml-auto">Save</button>
                </form>
            </div>

            @* tabs *@
            <div class="relative border-b">
                <nav class="nav__underline px-6 p-0 border-transparent -mb-px">
                    <ul class="uk-slider-items w-[calc(100%+10px)] !overflow-hidden" uk-switcher="connect: #setting_tab; animation: uk-animation-slide-right-medium, uk-animation-slide-left-medium">
                        <li class="w-auto pr-2.5">
                            <a href="#" class="tab-link text-white">Update Profile</a>
                        </li>
                        <li class="w-auto pr-2.5">
                            <a href="#" class="tab-link text-white">Update Password</a>
                        </li>
                    </ul>
                </nav>
            </div>

            <div id="setting_tab" class="uk-switcher py-12 px-20 overflow-hidden !text-white text-sm">
                <div>
                    <form asp-controller="Authentication" asp-action="UpdateProfile">
                        <div class="space-y-6">
                            @if (TempData["ProfileError"] is not null)
                            {
                                <div class="bg-red-500 text-white p-2 rounded-lg text-center">
                                    @TempData["ProfileError"]
                                </div>
                            }
                            @if (TempData["ProfileSuccess"] is not null)
                            {
                                <div class="bg-green-500 text-white p-2 rounded-lg text-center">
                                    @TempData["ProfileSuccess"]
                                </div>
                            }
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right">Full Name</label>
                                <div class="flex-1">
                                    <input type="text" value="@Model.FullName" name="fullName" placeholder="Enter your Full Name" class="!text-black w-full rounded-lg" />
                                </div>
                            </div>
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right">Username</label>
                                <div class="flex-1">
                                    <input type="text" value="@Model.UserName" name="username" placeholder="Enter your Username" class="!text-black w-full rounded-lg" />
                                </div>
                            </div>

                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right">Bio</label>
                                <div class="flex-1">
                                    <textarea class="!text-black w-full rounded-lg" name="bio" rows="5" placeholder="@Model.Bio"></textarea>
                                </div>
                            </div>

                            <div class="flex items-center gap-4 mt-16 pl-[10.5rem]">
                                <button class="bg-secondary hover:bg-opacity-80 transition-all ease-in-out duration-200 text-sm text-white rounded-full cursor-pointer px-4 py-2">Cancel</button>
                                <button class="bg-[#3a015c] hover:bg-opacity-80 transition-all ease-in-out duration-200 text-sm text-white rounded-full cursor-pointer px-4 py-2">Save</button>
                            </div>
                        </div>
                    </form>
                </div>
                <div>
                    <form asp-controller="Authentication" asp-action="UpdatePassword">
                        <div class="space-y-6">
                            @if (TempData["PasswordError"] is not null)
                            {
                                <div class="bg-red-500 text-white p-2 rounded-lg text-center">
                                    @TempData["PasswordError"]
                                </div>
                            }
                            @if (TempData["PasswordSuccess"] is not null)
                            {
                                <div class="bg-green-500 text-white p-2 rounded-lg text-center">
                                    @TempData["PasswordSuccess"]
                                </div>
                            }
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right">Current Password</label>
                                <div class="flex-1">
                                    <input type="password" name="currentPassword" placeholder="Enter your Current Password" class="!text-black w-full rounded-lg" />
                                </div>
                            </div>
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right">New Password</label>
                                <div class="flex-1">
                                    <input type="password" name="newPassword" placeholder="Enter your New Password" class="!text-black w-full rounded-lg" />
                                </div>
                            </div>
                            <div class="flex items-center gap-10">
                                <label class="w-32 text-right">Confirm Password</label>
                                <div class="flex-1">
                                    <input type="password" name="confirmPassword" placeholder="Confirm your new Password" class="!text-black w-full rounded-lg" />
                                </div>
                            </div>

                            <div class="flex items-center gap-4 mt-16 pl-[10.5rem]">
                                <button class="bg-red-500 hover:bg-opacity-80 transition-all ease-in-out duration-200 text-sm text-white rounded-full cursor-pointer px-4 py-2">Cancel</button>
                                <button class="bg-[#3a015c] hover:bg-opacity-80 transition-all ease-in-out duration-200 text-sm text-white rounded-full cursor-pointer px-4 py-2">Save</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</main>

<script>
    const imageUpload = document.getElementById('imageUpload');
    const imagePreview = document.getElementById('imagePreview');
    const saveButton = document.getElementById('saveButton');

    imageUpload.addEventListener('change', (e) => {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = e => {
                imagePreview.src = e.target.result;
                saveButton.classList.remove('hidden');
            }
            reader.readAsDataURL(file);
        } else {
            saveButton.classList.add('hidden');}
    });

    document.addEventListener('DOMContentLoaded', () => {
        const switcher = UIkit.switcher(document.querySelector('[uk-switcher]'));

        if('@TempData["ActiveTab"]' === 'Password'){
            switcher.show(1);
        } else {
            switcher.show(0)
        }
    });
</script>
